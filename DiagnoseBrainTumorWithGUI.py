from tkinter import *from tkinter import messageboximport cv2from tkinter import filedialogimport tkinter as tkfrom PIL import ImageTk, Imagefrom tkinter import *from tkinter import ttkfrom PIL import Image, ImageTkimport tkinter as tkimport tkinter.font as tkFontfrom tkinter import filedialog as fdimport osimport keras_applicationsimport kerasimport timefrom keras import utils as np_utilsfrom keras.models import Sequentialfrom keras.layers import Densefrom keras.applications.vgg16 import VGG16from keras.applications.resnet50 import ResNet50from keras.models import Modelfrom keras.preprocessing import imagefrom keras.layers import GlobalAveragePooling2D, Dense, Dropout,Activation,Flattenimport osimport cv2import numpy as npfrom sklearn.model_selection import train_test_splitfrom keras.layers import Conv1D,MaxPooling2D,Flatten,Dense,Dropout,InputLayerfrom tqdm import tqdmimport randomimport datetimeimport pandas as pdfrom keras.models import load_modeldef run_model(x):    if os.path.exists('D:/FCIS/4th Year/untitled5/BrainCancerModel2.h5'):        img = cv2.imread(x)        sizeNew = 224, 224        inputs = []        resized = cv2.resize(img, sizeNew)        inputs.append(np.array(resized))        model = keras.models.load_model('D:/FCIS/4th Year/untitled5/BrainCancerModel2.h5')        d = keras.optimizers.SGD(lr=0.001)        preds = model.predict(np.array(inputs))        y_classes = preds.argmax(axis=-1)        if y_classes == 0:            y_classes='Axial Normal'        if y_classes == 1:            y_classes='Coronal Normal'        if y_classes == 2:            y_classes='Sagittal Normal'        if y_classes == 3:            y_classes='Axial Glioma'        if y_classes == 4:            y_classes='Coronal Glioma'        if y_classes == 5:            y_classes = 'Sagittal Glioma'        if y_classes == 6:            y_classes = 'Axial MeninGlioma'        if y_classes == 7:            y_classes = 'Coronal MeninGlioma'        if y_classes == 8:            y_classes = 'Sagittal MeninGlioma'        if y_classes == 9:            y_classes = 'Axial Pituitary '        if y_classes == 10:            y_classes = 'Corona Pituitary '        if y_classes == 11:            y_classes = 'Sagittal Pituitary '        image_label = Label(root, bg="#FFFFFF", text=y_classes)        image_label.place(x=90, y=550)        image_label.config(font=("Courier",30))        #print(y_classes)res = []def open_file():    result =  filedialog.askopenfilenames(initialdir="/", title="select file", filetypes=(("images", ".png"), ("all files", ".")))    for c in result:        panel =tk.Label ()        i =0        for y in root.pack_slaves():            if i >= 0:                y.destroy()            i+=1        img = Image.open(c).convert('RGBA')        background = Image.open("D:/FCIS/4th Year/CS2/Neural networks/Task3_BackPropagation/bll.jpg").convert('RGBA')        background.paste(img, (135, 280),img)        background.save("D:\FCIS\hhhhhhhhhh.png")        canvas = Canvas(root, width=1600, height=900)        helv20 = tkFont.Font(family='Helvetica', size=14, weight='bold')        button = Button(root, height=5, width=20, text="Choose Image to Predict", command=open_file, font=helv20).place(x=155, y=80)        image = ImageTk.PhotoImage(Image.open("D:\FCIS\hhhhhhhhhh.png").convert('RGBA'))        canvas.create_image(0, 0, anchor=NW, image=image)        image_label = Label(root, bg="#FFFFFF", text="Image")        image_label.place(x=200, y=210)        image_label.config(font=("Courier", 30))        canvas.pack()        run_model(c)        root.mainloop()root = Tk()#button.pack()canvas = Canvas(root, width=1600, height=900)image=ImageTk.PhotoImage(Image.open("D:/FCIS/4th Year/CS2/Neural networks/Task3_BackPropagation/bll.jpg").convert('RGBA'))canvas.create_image(0,0,anchor=NW,image=image)canvas.pack()root.title("Brain Cancer Diagnoses")root.geometry('900x450')root.state('zoomed')style = tk.ttk.Style()style.configure('my.TButton',font=('bold'), bordercolor="red")helv20 = tkFont.Font(family='Helvetica', size=14, weight='bold')button = Button(root, height=5, width=20, text="Choose Image to Predict", command=open_file, font=helv20).place(x=155, y=80)root.mainloop()